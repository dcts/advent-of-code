{"version":3,"sources":["src/parser/index.js"],"names":[],"mappings":"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","file":"src/parser/index.js","sourcesContent":["import Machine, {LEFT, RIGHT} from '../machine';\n\nexport class SyntaxError extends Error {\n\tconstructor(message, line) {\n\t\tsuper();\n\t\tthis.message = message;\n\t\tthis.line = line;\n\t}\n}\n\nexport function parseRule(line){\n\tlet [condition, transition] = extractRuleParts(line);\n\tlet [originState, readSymbol] = extractCondition(condition);\n\tlet [nextState, symbolToWrite, direction] = extractTransition(transition);\n\n\treturn [originState, readSymbol, nextState, symbolToWrite, direction];\n}\n\nexport default function parse(code){\n\tlet machine = new Machine(\"Q0\", \"HALT\");\n\tlet rules = getRulesFromCode(code);\n\n\trules.forEach((rule) => {\n\t\tlet machine_rule = parseRule(rule);\n\t\tmachine.addRule(...machine_rule);\n\t});\n\n\treturn machine;\n}\n\nfunction getRulesFromCode(code){\n\tcode = code.split(\"\\t\").join(\" \"); // Replace tabs with spaces\n\tcode = stripComments(code);\n\n\tlet lines = code.split(\"\\n\");\n\treturn lines.filter(notEmpty);\n}\n\nfunction stripComments(code){\n\tlet lines = code.split(\"\\n\");\n\tlet result_lines = [];\n\n\tlines.forEach(function(line){\n\t\tresult_lines.push(line.split(\"#\")[0]);\n\t});\n\n\treturn result_lines.join(\"\\n\");\n}\n\nfunction notEmpty(line){\n\tvar parts = line.split(\" \");\n\tvar notEmptyParts = parts.filter(function(part){ return part.length !== 0; });\n\treturn notEmptyParts.length > 0;\n}\n\nfunction extractRuleParts(rule){\n\tlet ruleParts = rule.split(\"=>\");\n\n\tif (ruleParts.length !== 2){\n\t\tthrow new SyntaxError(\"Instruction error: \" + rule, rule);\n\t}\n\n\treturn ruleParts;\n}\n\nfunction extractCondition(conditionPart) {\n\tlet conditionParts = conditionPart.split(\" \").filter(notEmpty);\n\n\tif (conditionParts.length !== 2) {\n\t\tthrow new SyntaxError(\"Rule Condition Error\", line);\n\t}\n\n\treturn conditionParts;\n}\n\n\nfunction extractTransition(transitionPart){\n\tlet transitionParts = transitionPart.split(\" \").filter(notEmpty);\n\n\tif (transitionParts.length !== 3){\n\t\tthrow new SyntaxError(\"Rule transition Error\", transitionPart);\n\t}\n\n\ttransitionParts[2] = extractDirection(transitionParts[2]);\n\n\treturn transitionParts;\n}\n\nfunction extractDirection(direction){\n\tif (direction === \"LEFT\") {\n\t\treturn LEFT;\n\t} else if (direction === \"RIGHT\") {\n\t\treturn RIGHT;\n\t}\n\n\tthrow new SyntaxError(\"Rule direction error\", direction);\n}\n\n\n\n\n\n"]}