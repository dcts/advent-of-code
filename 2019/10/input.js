const inputToArray = inputStr =>
	String(inputStr)
		.trim()
		.split('\n')
		.map(row => row.split('').map(v => (v === '#' ? 1 : 0)));

const main_input = `#.....#...#.........###.#........#..
....#......###..#.#.###....#......##
......#..###.......#.#.#.#..#.......
......#......#.#....#.##....##.#.#.#
...###.#.#.......#..#...............
....##...#..#....##....#...#.#......
..##...#.###.....##....#.#..##.##...
..##....#.#......#.#...#.#...#.#....
.#.##..##......##..#...#.....##...##
.......##.....#.....##..#..#..#.....
..#..#...#......#..##...#.#...#...##
......##.##.#.#.###....#.#..#......#
#..#.#...#.....#...#...####.#..#...#
...##...##.#..#.....####.#....##....
.#....###.#...#....#..#......#......
.##.#.#...#....##......#.....##...##
.....#....###...#.....#....#........
...#...#....##..#.#......#.#.#......
.#..###............#.#..#...####.##.
.#.###..#.....#......#..###....##..#
#......#.#.#.#.#.#...#.#.#....##....
.#.....#.....#...##.#......#.#...#..
...##..###.........##.........#.....
..#.#..#.#...#.....#.....#...###.#..
.#..........#.......#....#..........
...##..#..#...#..#...#......####....
.#..#...##.##..##..###......#.......
.##.....#.......#..#...#..#.......#.
#.#.#..#..##..#..............#....##
..#....##......##.....#...#...##....
.##..##..#.#..#.................####
##.......#..#.#..##..#...#..........
#..##...#.##.#.#.........#..#..#....
.....#...#...#.#......#....#........
....#......###.#..#......##.....#..#
#..#...##.........#.....##.....#....`;

const sample_input_1 = `.#..#
.....
#####
....#
...##`;

const sample_input_2 = `......#.#.
#..#.#....
..#######.
.#.#.###..
.#..#.....
..#....#.#
#..#....#.
.##.#..###
##...#..#.
.#....####`;

const sample_input_3 = `#.#...#.#.
.###....#.
.#....#...
##.#.#.#.#
....#.#.#.
.##..###.#
..#...##..
..##....##
......#...
.####.###.`;

const sample_input_4 = `.#..#..###
####.###.#
....###.#.
..###.##.#
##.##.#.#.
....###..#
..#.#..#.#
#..#.#.###
.##...##.#
.....#.#..`;

const sample_input_5 = `.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##`;

const sample_input_part_2 = `.#....#####...#..
##...##.#####..##
##...#...#.#####.
..#.....#...###..
..#.#.....#....##`;

module.exports = {
	parseInt: inputToArray,
	input: inputToArray(main_input),
	sampleInputs: [
		{
			grid: inputToArray(sample_input_1),
			best_count: 8,
			best_coords: [3, 4],
		},
		{
			grid: inputToArray(sample_input_2),
			best_count: 33,
			best_coords: [5, 8],
		},
		{
			grid: inputToArray(sample_input_3),
			best_count: 35,
			best_coords: [1, 2],
		},
		{
			grid: inputToArray(sample_input_4),
			best_count: 41,
			best_coords: [6, 3],
		},
		{
			grid: inputToArray(sample_input_5),
			best_count: 210,
			best_coords: [11, 13],
			partTwo: 802, // 8 * 100 + 2
		},
		{
			grid: inputToArray(sample_input_part_2),
			best_count: 30,
			best_coords: [8, 3],
		}
	],
};
