{"version":3,"file":"main.bundle.js","sources":["../../../../../../2017/23/spa/src/lib/Program.js","../../../../../../2017/23/spa/src/lib/Registers.js","../../../../../../2017/23/spa/src/lib/InstructionCount.js","../../../../../../2017/23/spa/src/lib/BreakOn.js","../../../../../../2017/23/spa/src/lib/Controls.js","../../../../../../2017/23/spa/src/lib/Device.js","../../../../../../2017/23/spa/src/index.js"],"sourcesContent":["import React from 'react';\n\nexport const lineToString = ({ op, args }) => {\n\treturn op + ' ' + args[0] + ' ' + (args[1] ?? '');\n};\n\nconst Program = ({ program, instruction } = {}) => {\n\tconst rows = program.map((line, i) => {\n\t\tconst active = i === instruction;\n\t\tconst active_class = active ? 'active' : '';\n\t\treturn (\n\t\t\t<tr className={active_class}>\n\t\t\t\t<td className={active_class}>\n\t\t\t\t\t{active ? <b style={{ color: 'maroon' }}>*</b> : ''}\n\t\t\t\t</td>\n\t\t\t\t<td className={active_class} style={{ textAlign: 'right', paddingRight: '1em' }}>\n\t\t\t\t\t{active ? <b>{i}</b> : i}\n\t\t\t\t</td>\n\t\t\t\t<td className={active_class}>{lineToString(line)}</td>\n\t\t\t</tr>\n\t\t);\n\t});\n\treturn (\n\t\t<div style={{ flexGrow: 1 }}>\n\t\t\t<table>\n\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t</table>\n\t\t\t<div>\n\t\t\t\t{instruction > program.length - 1 ? <b style={{ color: 'green' }}>Done</b> : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Program;\n","import React from \"react\";\n\nconst Registers = ({ registers } = {}) => {\n  const { a, b, c, d, e, f, g, h } = registers;\n  return (\n    <div>\n      <b>Registers</b>\n      <ul style={{ margin: 0, paddingLeft: \"10px\" }}>\n        <li>a: {a}</li>\n        <li>b: {b}</li>\n        <li>c: {c}</li>\n        <li>d: {d}</li>\n        <li>e: {e}</li>\n        <li>f: {f}</li>\n        <li>g: {g}</li>\n        <li>h: {h}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Registers;\n","import React from 'react';\nimport { VALID_OPS } from './Device';\n\nconst InstructionCount = ({ intructionCount } = {}) => {\n\treturn (\n\t\t<div style={{ marginLeft: '1em' }}>\n\t\t\t<b>Instruction Count</b>\n\t\t\t<ul style={{ margin: 0, paddingLeft: '10px' }}>\n\t\t\t\t{VALID_OPS?.map((v) => (\n\t\t\t\t\t<li key={v}>{v}: {intructionCount[v]}</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default InstructionCount;\n","import React from \"react\";\n\nclass BreakOn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.myRef.current.onchange = e => {\n      this.props.setDeviceBreakOn(this.myRef.current.value);\n    };\n  }\n\n  render() {\n    return (\n      <label>\n        Break on: <input ref={this.myRef} />\n      </label>\n    );\n  }\n}\nexport default BreakOn;\n","import React from 'react';\n\nconst Button = ({ step, steps, children } = {}) => {\n\tconst fn = () => step(steps);\n\n\treturn (\n\t\t<button title={steps ? `Tick forward ${steps} steps` : null} onClick={fn}>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nconst Controls = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t<Button step={props.runUntilBreak}>▶</Button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button step={props.step} steps={1}>\n\t\t\t\t\t&gt;\n\t\t\t\t</Button>\n\t\t\t\t<Button step={props.step} steps={100}>\n\t\t\t\t\t≫\n\t\t\t\t</Button>\n\t\t\t\t<Button step={props.step} steps={10000}>\n\t\t\t\t\t⋙\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Controls;\n","import React from 'react';\nimport Program from './Program';\nimport Registers from './Registers';\nimport InstructionCount from './InstructionCount';\nimport BreakOn from './BreakOn';\nimport Controls from './Controls';\n\n/**\n * - `set X Y` sets register `X` to the value of `Y`.\n * - `sub X Y` decreases register `X` by the value of `Y`.\n * - `mul X Y` sets register `X` to the result of multiplying the value contained\n *    in register `X` by the value of `Y`.\n * - `jnz X Y` jumps with an offset of the value of `Y`, but only if the value\n *    of `X` is not zero. (An offset of 2 skips the next instruction, an offset\n *    of -1 jumps to the previous instruction, and so on.)\n */\n\nexport const VALID_OPS = ['set', 'sub', 'mul', 'jnz'];\nexport const registers = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\nexport const parseLine = (line) => {\n\tlet parts = line.split(' ');\n\tif (!VALID_OPS.includes(parts[0])) {\n\t\tthrow new Error(`Invalid op passed: \"${parts[0]}\" in line \"${line}\"`);\n\t}\n\n\tconst args = [];\n\tif (!registers.includes(parts[1])) {\n\t\tconst raw_arg = parts[1];\n\t\tparts[1] = parseInt(parts[1], 10);\n\t\tif (Number.isNaN(parts[1])) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid number / register as arugment passed: \"${raw_arg}\" in line \"${line}\"`\n\t\t\t);\n\t\t}\n\t}\n\n\targs.push(parts[1]);\n\n\tif (parts[2] != null && !registers.includes(parts[2])) {\n\t\tconst raw_arg = parts[2];\n\t\tparts[2] = parseInt(parts[2], 10);\n\n\t\tif (Number.isNaN(parts[2])) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid number / register as arugment passed: \"${raw_arg}\" in line \"${line}\"`\n\t\t\t);\n\t\t}\n\t}\n\n\tif (parts[2] != null) {\n\t\targs.push(parts[2]);\n\t}\n\n\treturn { op: parts[0], args };\n};\n\n/**\n * I'm not really handling state \"the React way\"\n * because this component doesn't know when its props change.\n * So I run `forceUpdate` every time the program changes.\n * 🤷‍♂️\n */\nexport default class Device extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst {\n\t\t\tprogram = [],\n\t\t\tstarting_registers = registers.reduce((obj, r) => {\n\t\t\t\tobj[r] = 0;\n\t\t\t\treturn obj;\n\t\t\t}, {}),\n\t\t\tstarting_instruction = 0,\n\t\t} = props;\n\n\t\t// Clone the arrays we pass in\n\t\tthis.program = JSON.parse(JSON.stringify(program));\n\t\tthis.registers = JSON.parse(JSON.stringify(starting_registers));\n\n\t\t// Save for resets later\n\t\tthis.starting_registers = starting_registers;\n\t\tthis.starting_program = program;\n\t\tthis.starting_instruction = starting_instruction;\n\n\t\tthis.instruction = starting_instruction;\n\t\tthis.instruction_count = VALID_OPS.reduce((obj, r) => {\n\t\t\tobj[r] = 0;\n\t\t\treturn obj;\n\t\t}, {});\n\t\tthis.state = {\n\t\t\tbreakOn: '',\n\t\t\ttoSet: 'a',\n\t\t\tvalueToSetTo: 1,\n\t\t};\n\t}\n\n\treset = () => {\n\t\tthis.registers = JSON.parse(JSON.stringify(this.starting_registers));\n\t\tthis.program = JSON.parse(JSON.stringify(this.starting_program));\n\t\tthis.instruction = this.starting_instruction;\n\t\tthis.instruction_count = VALID_OPS.reduce((obj, r) => {\n\t\t\tobj[r] = 0;\n\t\t\treturn obj;\n\t\t}, {});\n\t\tthis.forceUpdate();\n\t};\n\n\trun = (register_to_print = 'h') => {\n\t\tlet line = this.program[this.instruction];\n\n\t\twhile (line) {\n\t\t\tthis.step();\n\n\t\t\tline = this.program[this.instruction];\n\t\t}\n\n\t\treturn this.registers[register_to_print];\n\t};\n\n\trunUntilBreak = () => {\n\t\tlet line = this.program[this.instruction];\n\t\tlet stepped_at_least_once = false;\n\n\t\t/* eslint-disable */\n\t\twhile (line) {\n\t\t\ttry {\n\t\t\t\t// Importantly, get variables in local scope so eval works\n\t\t\t\tlet { a, b, c, d, e, f, g, h } = this.registers;\n\t\t\t\tlet i = this.instruction;\n\n\t\t\t\tif (eval(this.state.breakOn)) {\n\t\t\t\t\tthis.forceUpdate();\n\n\t\t\t\t\tif (stepped_at_least_once) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tstepped_at_least_once = true\n\t\t\tthis.step();\n\n\t\t\tline = this.program[this.instruction];\n\t\t}\n\t\t/* eslint-enable */\n\n\t\tthis.forceUpdate();\n\t};\n\n\tstep = (n = 1) => {\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tif (!this.program[this.instruction]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst { op, args } = this.program[this.instruction];\n\n\t\t\t// Run the opcode\n\t\t\tlet value = this[op].apply(this, args);\n\n\t\t\tif (op === 'jnz' && value === true) {\n\t\t\t\t// Do nothing, we jumped. Otherwise, skip the `jnz` instruction\n\t\t\t} else {\n\t\t\t\tthis.instruction++;\n\t\t\t}\n\t\t}\n\n\t\tthis.forceUpdate();\n\t};\n\n\tgetValueOf = (x) => {\n\t\treturn typeof x === 'string' ? this.registers[x] : x;\n\t};\n\n\t/**\n\t * START - Opcodes\n\t */\n\n\tset = (register, value) => {\n\t\t++this.instruction_count.set;\n\t\tthis.registers[register] = this.getValueOf(value);\n\t};\n\n\tsub = (register, value) => {\n\t\t++this.instruction_count.sub;\n\t\tthis.registers[register] -= this.getValueOf(value);\n\t};\n\n\tmul = (register, value) => {\n\t\t++this.instruction_count.mul;\n\t\tthis.registers[register] *= this.getValueOf(value);\n\t};\n\n\tjnz = (value, offset) => {\n\t\t++this.instruction_count.jnz;\n\t\tif (this.getValueOf(value) !== 0) {\n\t\t\tthis.instruction += this.getValueOf(offset);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * END - Opcodes\n\t */\n\n\tsetDeviceBreakOn = (breakOn) => {\n\t\tthis.setState({ breakOn });\n\t};\n\n\thandleSetToChange = (e) => {\n\t\tlet toSet = e.target.value;\n\t\tif (toSet === 'i') {\n\t\t\ttoSet = 'instruction';\n\t\t} else if (toSet === 'l') {\n\t\t\ttoSet = 'line';\n\t\t}\n\n\t\tthis.setState({ toSet });\n\t};\n\n\thandleValueChange = (e) => {\n\t\tthis.setState({ valueToSetTo: e.target.value });\n\t};\n\n\thandleSetTo = () => {\n\t\tconst { toSet: setTo, valueToSetTo } = this.state;\n\n\t\tif (setTo === 'line') {\n\t\t\tlet line = parseLine(valueToSetTo);\n\t\t\tthis.program[this.instruction] = line;\n\t\t} else {\n\t\t\tconst value = parseInt(valueToSetTo, 10);\n\t\t\tif (Number.isNaN(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this[setTo] !== undefined) {\n\t\t\t\tthis[setTo] = value;\n\t\t\t}\n\n\t\t\tif (this.registers[setTo] !== undefined) {\n\t\t\t\tthis.registers[setTo] = value;\n\t\t\t}\n\t\t}\n\n\t\tthis.forceUpdate();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div>\n\t\t\t\t\tSet{' '}\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{ width: '9em' }}\n\t\t\t\t\t\tonChange={this.handleSetToChange}\n\t\t\t\t\t\tvalue={this.state.toSet}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\t={' '}\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{ width: '9em' }}\n\t\t\t\t\t\tonChange={this.handleValueChange}\n\t\t\t\t\t\tvalue={this.state.valueToSetTo}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\tlineHeight: '13px',\n\t\t\t\t\t\t\tpadding: '2px',\n\t\t\t\t\t\t\tcolor: 'royalblue',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => this.handleSetTo()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>✔</span>️ Set\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"device\">\n\t\t\t\t\t<div style={{ flexGrow: 2 }}>\n\t\t\t\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t\t\t\t<Registers registers={this.registers} />\n\t\t\t\t\t\t\t<InstructionCount intructionCount={this.instruction_count} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<BreakOn setDeviceBreakOn={this.setDeviceBreakOn} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Program program={this.program} instruction={this.instruction} />\n\n\t\t\t\t\t{this.instruction > this.program.length - 1 ? null : (\n\t\t\t\t\t\t<Controls step={this.step} runUntilBreak={this.runUntilBreak} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<button style={{ fontSize: '1em' }} onClick={this.reset}>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t\t{' '}\n\t\t\t\t<button style={{ fontSize: '1em' }} onClick={this.props.loadNewProgram}>\n\t\t\t\t\tLoad new Program\n\t\t\t\t</button>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Device, { parseLine } from \"./lib/Device.js\";\n\nconst initial_data = `set b 67\nset c b\njnz a 2\njnz 1 5\nmul b 100\nsub b -100000\nset c b\nsub c -17000\nset f 1\nset d 2\nset e 2\nset g d\nmul g e\nsub g b\njnz g 2\nset f 0\nsub e -1\nset g e\nsub g b\njnz g -8\nsub d -1\nset g d\nsub g b\njnz g -13\njnz f 2\nsub h -1\nset g b\nsub g c\njnz g 2\njnz 1 3\nsub b -17\njnz 1 -23`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data_ref = React.createRef();\n    this.state = {\n      data: null,\n      run: false,\n      dataError: \"\"\n    };\n  }\n\n  resetState = () => {\n    this.setState({\n      data: null,\n      run: false,\n      dataError: \"\"\n    });\n  }\n\n  parseProgramAndRun = () => {\n    let data_str = String(this.data_ref.current.value).trim();\n    if (!data_str) {\n      this.setState({ dataError: \"Empty program passed in.\" });\n      return;\n    }\n\n    let data_arr = data_str.split(\"\\n\");\n    const data = [];\n\n    // Run using for loop instead of `map` so I can catch errors\n    try {\n      for (let i = 0; i < data_arr.length; i++) {\n        data.push(parseLine(data_arr[i]));\n      }\n    } catch (e) {\n      this.setState({ dataError: e.toString() });\n      return;\n    }\n\n    // If we are here, we have a valid data\n    this.setState({\n      data,\n      run: true\n    });\n  };\n\n  componentDidMount() {\n    if (this.data_ref?.current)\n    this.data_ref.current.value = initial_data;\n  }\n\n  componentDidUpdate() {\n    if (this.data_ref?.current) {\n      this.data_ref.current.value = initial_data;\n    }\n  }\n\n  render() {\n    if (!this.state.run) {\n      return (\n        <div>\n          <p>Enter the program input, separated by newlines:</p>\n          <textarea\n            rows=\"16\"\n            cols=\"46\"\n            ref={this.data_ref}\n            onClick={() => this.setState({ dataError: null })}\n          />\n          <div>\n            <button onClick={() => this.parseProgramAndRun()}>\n              Run Program\n            </button>\n            {this.state.dataError ? (\n              <p style={{ color: \"red\" }}>{this.state.dataError}</p>\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n\n    return <Device program={this.state.data} loadNewProgram={this.resetState} />;\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"names":["lineToString","op","args","Program","program","instruction","rows","map","line","i","active","active_class","React","color","textAlign","paddingRight","flexGrow","length","Registers","registers","a","b","c","d","e","f","g","h","margin","paddingLeft","InstructionCount","intructionCount","marginLeft","VALID_OPS","v","BreakOn","Component","constructor","props","myRef","createRef","componentDidMount","current","onchange","setDeviceBreakOn","value","render","Button","step","steps","children","fn","Controls","runUntilBreak","parseLine","parts","split","includes","Error","raw_arg","parseInt","Number","isNaN","push","Device","JSON","parse","stringify","starting_registers","starting_program","starting_instruction","instruction_count","reduce","obj","r","forceUpdate","register_to_print","stepped_at_least_once","eval","state","breakOn","n","apply","x","register","set","getValueOf","sub","mul","offset","jnz","setState","toSet","target","valueToSetTo","setTo","undefined","width","handleSetToChange","handleValueChange","fontSize","lineHeight","padding","handleSetTo","display","reset","loadNewProgram","initial_data","App","data","run","dataError","data_str","String","data_ref","trim","data_arr","toString","componentDidUpdate","parseProgramAndRun","resetState","rootElement","document","getElementById","ReactDOM"],"mappings":"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"}